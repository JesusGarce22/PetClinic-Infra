name: Terraform Azure Deployment

on:
  push:
    branches:
      - main
    paths:
      - "main.tf"
  pull_request:
    branches:
      - main
    paths:
      - "main.tf" 

env:
  ARM_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_KEY }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

jobs:
  terraformDeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Destroy
        run: terraform destroy

      - name: Terraform Init
        run: terraform init

      - name: Import Existing Resources
        shell: bash
        run: |
          resources=(
            "azurerm_resource_group.rg /subscriptions/${{ secrets.AZURE_SUBSCRIPTION }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}"
            "azurerm_container_registry.acr /subscriptions/${{ secrets.AZURE_SUBSCRIPTION }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}/providers/Microsoft.ContainerRegistry/registries/divergencia"
            "azurerm_key_vault.key_vault /subscriptions/${{ secrets.AZURE_SUBSCRIPTION }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}/providers/Microsoft.KeyVault/vaults/divergenciakeyvault"
            "azurerm_kubernetes_cluster.aks_cluster /subscriptions/${{ secrets.AZURE_SUBSCRIPTION }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}/providers/Microsoft.ContainerService/managedClusters/${{ env.AKS_CLUSTER_NAME }}"
          )

          for resource in "${resources[@]}"; do
            terraform import $resource || echo "Resource already managed"
          done

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var "tenant_id=${{ secrets.TENANT_ID }}" -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan -out=tfplan -var "tenant_id=${{ secrets.TENANT_ID }}" -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION }}"
